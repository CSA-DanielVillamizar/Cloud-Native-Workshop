name: 0 Testing

on:  workflow_dispatch

env:
  image_name: oapi
  tag: latest
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  RESOURCE_GROUP: ${{ secrets.AZURE_RG }} 
  acr_name: ${{ secrets.ACR_NAME }} 
  

jobs:
  deploy-microservice:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
        
          echo "Get Cluster Credentials"
          az aks get-credentials --name ${{ env.CLUSTER_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
          
          echo "Deploy Microservice"          
          az aks command invoke --name ${{ env.CLUSTER_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --command "kubectl create ns api"
          az aks command invoke --name ${{ env.CLUSTER_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --command "kubectl create deploy api --image=${{ env.acr_name }}.azurecr.io/${{ env.image_name }}:${{ env.tag }} -n api"
          
          echo "Install kubectl"
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version
          
          echo "Setup HPA"
          kubectl autoscale deployment api --cpu-percent=30 --min=4 --max=100 -n api
          
          echo "Expose Microservice"
          kubectl expose deployment api --type=LoadBalancer --name=api --port=80 --target-port=7999 -n api
          
          echo "Get Service"
          az aks command invoke --name ${{ env.CLUSTER_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --command "kubectl get service -n api"
